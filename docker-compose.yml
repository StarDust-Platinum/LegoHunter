version: "1.1"

services:
  selenium:
    image: selenium/standalone-chrome:latest
    container_name: selenium
    networks:
      lego:
    ports:
      - 4444:4444
      - 7900:7900

  mysql:
    image: mysql:8.0.38
    container_name: mysql
    networks:
      lego:
    ports:
      - 3306:3306
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/conf.d:/etc/mysql/conf.d
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      TZ: 'UTC'
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
        timeout: 5s
        retries: 5
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci 

  legohunter:
    build: ./LegoHunter
    container_name: legohunter
    networks:
      lego:
    ports:
      - 8000:8000
    env_file:
      - .env
    volumes:
      - static:/static
    depends_on:
      mysql:
        condition: service_healthy
    command: /bin/sh -c "python3 manage.py makemigrations LegoItems && python3 manage.py migrate LegoItems && gunicorn LegoHunter.wsgi:application --bind 0.0.0.0:8000"

  legospider:
    build: ./LegoSpider
    container_name: legospider
    networks:
      lego:
    volumes:
      - ./LegoSpider/crontabs:/var/spool/cron/crontabs
    command: /bin/sh -c "crontab /var/spool/cron/crontabs/crontab && cron -f"
    depends_on:
      legohunter:
        condition: service_started
      selenium:
        condition: service_started
      mysql:
        condition: service_healthy

  nginx:
    image: nginx:1.27.0-alpine
    container_name: nginx
    networks:
      lego:
    ports:
      - 80:80
    volumes:
      - static:/static
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - legohunter

networks:
  lego:

volumes:
  static: